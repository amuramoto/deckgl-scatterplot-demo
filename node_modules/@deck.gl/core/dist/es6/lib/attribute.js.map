{"version":3,"sources":["../../../src/lib/attribute.js"],"names":["Buffer","assert","createIterable","log","BaseAttribute","DEFAULT_STATE","isExternalBuffer","needsUpdate","needsRedraw","allocedInstances","Attribute","constructor","gl","opts","transition","noAlloc","update","accessor","bufferLayout","defaultValue","Array","isArray","Object","assign","userData","seal","_validateAttributeUpdaters","layout","clearChangedFlags","getInstanceCount","value","length","size","getUpdateTriggers","id","concat","getAccessor","supportsTransition","getTransitionSetting","settings","find","a","Number","isFinite","duration","setNeedsUpdate","reason","setNeedsRedraw","allocate","numInstances","state","instanceCount","needsAlloc","allocCount","Math","max","ArrayType","glArrayFromType","type","constant","updateBuffer","data","props","context","updated","call","_checkAttributeArray","_updateBufferViaStandardAccessor","setGenericValue","undefined","_normalizeValue","hasChanged","_areValuesEqual","setExternalBuffer","buffer","externalBuffer","ArrayBuffer","isView","Error","auto","warn","name","out","start","value1","value2","i","accessorFunc","iterable","objectInfo","object","index","objectValue","hasUpdater","valid","glType","clamped","Float32Array","Uint16Array","Uint32Array","Uint8ClampedArray","Uint8Array","Int8Array","Int16Array","Int32Array"],"mappings":"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","sourcesContent":["/* eslint-disable complexity */\nimport GL from '@luma.gl/constants';\nimport {Buffer} from '@luma.gl/core';\nimport assert from '../utils/assert';\nimport {createIterable} from '../utils/iterable-utils';\nimport log from '../utils/log';\nimport BaseAttribute from './base-attribute';\n\nconst DEFAULT_STATE = {\n  isExternalBuffer: false,\n  needsUpdate: true,\n  needsRedraw: false,\n  allocedInstances: -1\n};\n\nexport default class Attribute extends BaseAttribute {\n  constructor(gl, opts = {}) {\n    super(gl, opts);\n\n    const {\n      // deck.gl fields\n      transition = false,\n      noAlloc = false,\n      update = null,\n      accessor = null,\n      bufferLayout = null\n    } = opts;\n\n    let {defaultValue = [0, 0, 0, 0]} = opts;\n    defaultValue = Array.isArray(defaultValue) ? defaultValue : [defaultValue];\n\n    Object.assign(this.userData, DEFAULT_STATE, opts, {\n      transition,\n      noAlloc,\n      update,\n      accessor,\n      defaultValue,\n      bufferLayout\n    });\n\n    Object.seal(this.userData);\n\n    // Check all fields and generate helpful error messages\n    this._validateAttributeUpdaters();\n  }\n\n  get bufferLayout() {\n    return this.userData.bufferLayout;\n  }\n\n  set bufferLayout(layout) {\n    this.userData.bufferLayout = layout;\n  }\n\n  needsUpdate() {\n    return this.userData.needsUpdate;\n  }\n\n  needsRedraw({clearChangedFlags = false} = {}) {\n    const needsRedraw = this.userData.needsRedraw;\n    this.userData.needsRedraw = this.userData.needsRedraw && !clearChangedFlags;\n    return needsRedraw;\n  }\n\n  getInstanceCount() {\n    return this.value !== null ? this.value.length / this.size : 0;\n  }\n\n  getUpdateTriggers() {\n    const {accessor} = this.userData;\n\n    // Backards compatibility: allow attribute name to be used as update trigger key\n    return [this.id].concat(accessor || []);\n  }\n\n  getAccessor() {\n    return this.userData.accessor;\n  }\n\n  supportsTransition() {\n    return this.userData.transition;\n  }\n\n  // Resolve transition settings object if transition is enabled, otherwise `null`\n  getTransitionSetting(opts) {\n    const {transition, accessor} = this.userData;\n    if (!transition) {\n      return null;\n    }\n    let settings = Array.isArray(accessor) ? opts[accessor.find(a => opts[a])] : opts[accessor];\n\n    // Shorthand: use duration instead of parameter object\n    if (Number.isFinite(settings)) {\n      settings = {duration: settings};\n    }\n\n    if (settings && settings.duration > 0) {\n      return Object.assign({}, transition, settings);\n    }\n\n    return null;\n  }\n\n  // Checks that typed arrays for attributes are big enough\n  // sets alloc flag if not\n  // @return {Boolean} whether any updates are needed\n  setNeedsUpdate(reason = this.id) {\n    this.userData.needsUpdate = this.userData.needsUpdate || reason;\n  }\n\n  setNeedsRedraw(reason = this.id) {\n    this.userData.needsRedraw = this.userData.needsRedraw || reason;\n  }\n\n  allocate(numInstances) {\n    const state = this.userData;\n\n    if (state.isExternalBuffer || state.noAlloc) {\n      // Data is provided through a Buffer object.\n      return false;\n    }\n\n    // Do we need to reallocate the attribute's typed array?\n    const instanceCount = this.getInstanceCount();\n    const needsAlloc = instanceCount === 0 || instanceCount < numInstances;\n    if (needsAlloc && (state.update || state.accessor)) {\n      assert(Number.isFinite(numInstances));\n      // Allocate at least one element to ensure a valid buffer\n      const allocCount = Math.max(numInstances, 1);\n      const ArrayType = glArrayFromType(this.type || GL.FLOAT);\n\n      this.constant = false;\n      this.value = new ArrayType(this.size * allocCount);\n      state.needsUpdate = true;\n      state.allocedInstances = allocCount;\n      return true;\n    }\n\n    return false;\n  }\n\n  updateBuffer({numInstances, data, props, context}) {\n    if (!this.needsUpdate()) {\n      return false;\n    }\n\n    const state = this.userData;\n\n    const {update, accessor} = state;\n\n    let updated = true;\n    if (update) {\n      // Custom updater - typically for non-instanced layers\n      update.call(context, this, {data, props, numInstances});\n      this.update({\n        value: this.value,\n        constant: this.constant\n      });\n      this._checkAttributeArray();\n    } else if (accessor) {\n      // Standard updater\n      this._updateBufferViaStandardAccessor(data, props);\n      this._checkAttributeArray();\n    } else {\n      updated = false;\n    }\n\n    state.needsUpdate = false;\n    state.needsRedraw = true;\n\n    return updated;\n  }\n\n  // Use generic value\n  // Returns true if successful\n  setGenericValue(value) {\n    const state = this.userData;\n\n    if (value === undefined || typeof value === 'function') {\n      // ignore if this attribute has no accessor\n      // ignore if accessor is function, will be used in updateBuffer\n      state.isExternalBuffer = false;\n      return false;\n    }\n\n    value = this._normalizeValue(value);\n    const hasChanged = !this.constant || !this._areValuesEqual(value, this.value);\n\n    if (hasChanged) {\n      this.update({constant: true, value});\n    }\n    state.needsRedraw = state.needsUpdate || hasChanged;\n    state.needsUpdate = false;\n    state.isExternalBuffer = true;\n    return true;\n  }\n\n  // Use external buffer\n  // Returns true if successful\n  setExternalBuffer(buffer, numInstances) {\n    const state = this.userData;\n\n    if (buffer) {\n      state.isExternalBuffer = true;\n      state.needsUpdate = false;\n\n      if (buffer instanceof Buffer) {\n        if (this.externalBuffer !== buffer) {\n          this.update({constant: false, buffer});\n          state.needsRedraw = true;\n        }\n      } else if (this.value !== buffer) {\n        if (!ArrayBuffer.isView(buffer)) {\n          throw new Error('Attribute prop must be typed array');\n        }\n        if (state.auto && buffer.length <= numInstances * this.size) {\n          throw new Error('Attribute prop array must match length and size');\n        }\n\n        const ArrayType = glArrayFromType(this.type || GL.FLOAT);\n        if (buffer instanceof ArrayType) {\n          this.update({constant: false, value: buffer});\n        } else {\n          log.warn(`Attribute prop ${this.id} is casted to ${ArrayType.name}`)();\n          // Cast to proper type\n          this.update({constant: false, value: new ArrayType(buffer)});\n        }\n        // Save original typed array\n        this.value = buffer;\n        state.needsRedraw = true;\n      }\n      return true;\n    }\n\n    state.isExternalBuffer = false;\n    return false;\n  }\n\n  // PRIVATE HELPER METHODS\n\n  /* check user supplied values and apply fallback */\n  _normalizeValue(value, out = [], start = 0) {\n    const {defaultValue} = this.userData;\n\n    if (!Array.isArray(value) && !ArrayBuffer.isView(value)) {\n      out[start] = Number.isFinite(value) ? value : defaultValue[0];\n      return out;\n    }\n\n    /* eslint-disable no-fallthrough, default-case */\n    switch (this.size) {\n      case 4:\n        out[start + 3] = Number.isFinite(value[3]) ? value[3] : defaultValue[3];\n      case 3:\n        out[start + 2] = Number.isFinite(value[2]) ? value[2] : defaultValue[2];\n      case 2:\n        out[start + 1] = Number.isFinite(value[1]) ? value[1] : defaultValue[1];\n      case 1:\n        out[start + 0] = Number.isFinite(value[0]) ? value[0] : defaultValue[0];\n    }\n\n    return out;\n  }\n\n  _areValuesEqual(value1, value2, size = this.size) {\n    for (let i = 0; i < size; i++) {\n      if (value1[i] !== value2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  _updateBufferViaStandardAccessor(data, props) {\n    const state = this.userData;\n\n    const {accessor} = state;\n    const {value, size} = this;\n    const accessorFunc = props[accessor];\n\n    assert(typeof accessorFunc === 'function', `accessor \"${accessor}\" is not a function`);\n\n    let i = 0;\n    const {iterable, objectInfo} = createIterable(data);\n    for (const object of iterable) {\n      objectInfo.index++;\n      const objectValue = accessorFunc(object, objectInfo);\n      this._normalizeValue(objectValue, value, i);\n      i += size;\n    }\n    this.update({value});\n  }\n\n  // Validate deck.gl level fields\n  _validateAttributeUpdaters() {\n    const state = this.userData;\n\n    // Check that either 'accessor' or 'update' is a valid function\n    const hasUpdater =\n      state.noAlloc || typeof state.update === 'function' || typeof state.accessor === 'string';\n    if (!hasUpdater) {\n      throw new Error(`Attribute ${this.id} missing update or accessor`);\n    }\n  }\n\n  _checkAttributeArray() {\n    const {value} = this;\n    if (value && value.length >= 4) {\n      const valid =\n        Number.isFinite(value[0]) &&\n        Number.isFinite(value[1]) &&\n        Number.isFinite(value[2]) &&\n        Number.isFinite(value[3]);\n      if (!valid) {\n        throw new Error(`Illegal attribute generated for ${this.id}`);\n      }\n    }\n  }\n}\n\n/* eslint-disable complexity */\nexport function glArrayFromType(glType, {clamped = true} = {}) {\n  // Sorted in some order of likelihood to reduce amount of comparisons\n  switch (glType) {\n    case GL.FLOAT:\n      return Float32Array;\n    case GL.UNSIGNED_SHORT:\n    case GL.UNSIGNED_SHORT_5_6_5:\n    case GL.UNSIGNED_SHORT_4_4_4_4:\n    case GL.UNSIGNED_SHORT_5_5_5_1:\n      return Uint16Array;\n    case GL.UNSIGNED_INT:\n      return Uint32Array;\n    case GL.UNSIGNED_BYTE:\n      return clamped ? Uint8ClampedArray : Uint8Array;\n    case GL.BYTE:\n      return Int8Array;\n    case GL.SHORT:\n      return Int16Array;\n    case GL.INT:\n      return Int32Array;\n    default:\n      throw new Error('Failed to deduce type from array');\n  }\n}\n/* eslint-enable complexity */\n"],"file":"attribute.js"}